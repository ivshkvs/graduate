name: CI ( Flake8, Pylint, Artifact)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
      BUILD_NAME: ${{ github.run_number }}
      
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with Flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  Lint:
    runs-on: ubuntu-latest
    needs: Test
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Lint code with Pylint
      run: |
        pylint $(git ls-files '*.py')

  Build:
    runs-on: ubuntu-latest
    needs: Lint
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: pip install -r ./chatbot/requirements.txt
    - name: Build
      run: python ./chatbot/setup.py build
    - name: Set Name Variables
      run: |
          echo "version=$(git describe)" >> $GITHUB_ENV
          cd .release
          echo "folder_name=$(ls -d */ | sed 's:/*$::')" >> $GITHUB_ENV    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.folder_name }}-${{ env.version }}
        path: |
            .release/*/
            !.release/*.zip

  Download:
    runs-on: ubuntu-latest
    needs: Build
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.folder_name }}-${{ env.version }}
